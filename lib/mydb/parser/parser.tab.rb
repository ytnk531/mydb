#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Mydb
  module Parser
    class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     6,    16,    47,    47,    13,     9,     7,    48,    48,     8,
    30,    31,    39,    22,    40,    41,    52,    53,    10,    11,
    18,    19,    18,    21,    22,    24,    26,    18,    16,    16,
    16,    38,    16,    44,    16,    50,    38,    54,    55,    57,
    58 ]

racc_action_check = [
     0,     7,    38,    53,     7,     1,     0,    38,    53,     0,
    23,    23,    32,    32,    33,    33,    45,    45,     2,     6,
     8,     9,    11,    12,    14,    17,    20,    21,    22,    24,
    26,    29,    35,    36,    41,    43,    44,    48,    50,    54,
    55 ]

racc_action_pointer = [
    -3,     5,    16,   nil,   nil,   nil,    15,    -7,    12,    21,
   nil,    14,    13,   nil,    17,   nil,   nil,    20,   nil,   nil,
    21,    19,    20,    -4,    21,   nil,    22,   nil,   nil,    26,
   nil,   nil,     6,     8,   nil,    24,    26,   nil,    -6,   nil,
   nil,    26,   nil,    30,    31,    10,   nil,   nil,    29,   nil,
    30,   nil,   nil,    -5,    26,    34,   nil,   nil,   nil ]

racc_action_default = [
   -30,   -30,   -30,    -2,    -3,    -4,   -30,   -30,   -30,   -30,
    -1,   -30,   -30,   -13,   -14,   -26,   -28,   -30,   -29,    59,
   -30,   -30,   -30,   -30,   -30,    -5,   -30,   -12,   -27,   -30,
   -23,   -24,   -30,   -30,    -7,   -30,   -15,   -16,   -30,   -25,
    -6,   -30,    -9,   -10,   -30,   -30,   -19,   -21,   -30,    -8,
   -30,   -17,   -18,   -30,   -30,   -30,   -20,   -22,   -11 ]

racc_goto_table = [
    28,    14,    34,     1,    35,    37,    46,     2,     3,    17,
     4,     5,    20,    43,    25,    33,    42,    49,    32,    35,
    51,    56,    27,    12,    23,    29,    36,    45 ]

racc_goto_check = [
    10,    13,     9,     1,    10,    17,    19,     2,     3,     6,
     4,     5,     6,    10,     7,     8,    11,     9,    13,    10,
    17,    19,     6,    12,    14,    15,    16,    18 ]

racc_goto_pointer = [
   nil,     3,     7,     8,    10,    11,     1,    -6,   -11,   -24,
   -22,   -19,    16,    -6,     7,     2,    -3,   -24,   -11,   -32 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 17, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  4, 19, :_reduce_5,
  3, 23, :_reduce_6,
  1, 24, :_reduce_7,
  3, 24, :_reduce_8,
  2, 25, :_reduce_none,
  1, 27, :_reduce_none,
  4, 27, :_reduce_none,
  4, 21, :_reduce_12,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  5, 20, :_reduce_15,
  1, 32, :_reduce_16,
  3, 32, :_reduce_17,
  3, 33, :_reduce_18,
  1, 34, :_reduce_19,
  3, 34, :_reduce_20,
  1, 35, :_reduce_none,
  3, 35, :_reduce_22,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 30, :_reduce_25,
  1, 29, :_reduce_26,
  3, 29, :_reduce_27,
  1, 26, :_reduce_none,
  1, 22, :_reduce_none ]

racc_reduce_n = 30

racc_shift_n = 59

racc_token_table = {
  false => 0,
  :error => 1,
  :SEMICOLON => 2,
  :CREATE => 3,
  :TABLE => 4,
  :LEFT_PAREN => 5,
  :RIGHT_PAREN => 6,
  :COMMA => 7,
  :IDENT => 8,
  :SELECT => 9,
  :FROM => 10,
  :STAR => 11,
  :INSERT => 12,
  :SINGLE_QUATE => 13,
  :VALUE => 14,
  :VALUES => 15 }

racc_nt_base = 16

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SEMICOLON",
  "CREATE",
  "TABLE",
  "LEFT_PAREN",
  "RIGHT_PAREN",
  "COMMA",
  "IDENT",
  "SELECT",
  "FROM",
  "STAR",
  "INSERT",
  "SINGLE_QUATE",
  "VALUE",
  "VALUES",
  "$start",
  "query",
  "statement",
  "create_table",
  "insert",
  "select",
  "tbl_name",
  "create_definition_list",
  "comma_separated_create_definition",
  "create_definition",
  "col_name",
  "column_definition",
  "select_target",
  "comma_separated_col_names",
  "col_name_list",
  "values",
  "value_list_list",
  "value_list_paren",
  "value_list",
  "column_value" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_5(val, _values, result)
     result = Mydb::CreateCommand.new(val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_6(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_7(val, _values, result)
     result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_8(val, _values, result)
     result = val[0].append(val[2])
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_12(val, _values, result)
     result = Mydb::SelectCommand.new(val[3], val[1])
    result
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_15(val, _values, result)
     result = Mydb::InsertCommand.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 31)
  def _reduce_16(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_17(val, _values, result)
     result = val[0].append(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_18(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_19(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_20(val, _values, result)
     result = val[0].append(val[2])
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_22(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_25(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_26(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_27(val, _values, result)
     result = val[0].append(val[2])
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
  end   # module Parser
end   # module Mydb

require_relative './parser.rex'

# INSERT customer (id, name) VALUE (10, 'aaa');
# SELECT * FROM customer;
